[{"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App.jsx":"1","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App\\LoginForm.jsx":"2","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\utils\\api.js":"3","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\reportWebVitals.js":"4","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App\\Site.jsx":"5","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App\\Ingredients\\Ingredients.jsx":"6","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\hooks\\ingredients.jsx":"7","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\index.js":"8"},{"size":498,"mtime":1609346083146,"results":"9","hashOfConfig":"10"},{"size":1643,"mtime":1609332157415,"results":"11","hashOfConfig":"10"},{"size":761,"mtime":1609331328797,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1609277249474,"results":"13","hashOfConfig":"10"},{"size":1769,"mtime":1609353101849,"results":"14","hashOfConfig":"10"},{"size":302,"mtime":1609352925419,"results":"15","hashOfConfig":"10"},{"size":865,"mtime":1609353314909,"results":"16","hashOfConfig":"10"},{"size":521,"mtime":1609277249471,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1xva0oj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App.jsx",["38"],"import React, {useState, useEffect} from \"react\";\nimport {LoginForm} from \"./App/LoginForm\";\nimport {apiFetch} from \"./utils/api\";\nimport {Site} from \"./App/Site\";\n\n\nexport  default function App() {\n\n    const [user, setUser] = useState(null)\n\n    useEffect(function (){\n        apiFetch('/me')\n            .then(setUser)\n            .catch(() => setUser(false))\n    })\n\n    if (user === null ){\n        return null\n    }\n\n  return (\n      user ? <Site /> : <LoginForm onConnect={setUser}/>\n  );\n}\n","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App\\LoginForm.jsx",["39"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {useState} from \"react\"\nimport {ApiErrors, apiFetch} from \"../utils/api\";\n\nexport function LoginForm ({onConnect}){\n\n    const [error, setError] = useState(null)\n    const [loading, setLoding] = useState(false)\n\n    const handleSubmit = async function (e){\n        setError(null)\n        setLoding(true)\n        e.preventDefault()\n\n        const data = new FormData(e.target)\n        try{\n            const user = await apiFetch('/login', {\n                method: 'POST',\n                body: data,\n            })\n        } catch (e){\n            if (e instanceof ApiErrors){\n                setError(e.errors[0].message)\n\n            }else{\n                console.log(e)\n            }\n            setLoding(false)\n        }\n    }\n\n    return <form className=\"container mt-4\" onSubmit={handleSubmit}>\n        <h2>Se connecter</h2>\n        {error && <Alert>{error}</Alert>}\n        <div className=\"form-group\">\n            <label htmlFor=\"email\">Nom d'utilisateur</label>\n            <input type=\"text\" name=\"email\" id=\"email\"  className=\"form-control\" required/>\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"\">Mot de passe</label>\n            <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" required/>\n        </div>\n        <button disabled={loading} type=\"submit\" className=\"btn btn-primary\">Se connecter</button>\n    </form>\n}\n\nLoginForm.propTypes = {\n    onConnect: PropTypes.func.isRequired\n}\n\nfunction Alert ({children}){\n    return <div className=\"alert alert-danger\">\n        {children}\n    </div>\n}","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\utils\\api.js",[],"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\reportWebVitals.js",[],"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App\\Site.jsx",["40","41"],"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App\\Ingredients\\Ingredients.jsx",[],"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\hooks\\ingredients.jsx",["42"],"import {apiFetch} from \"../utils/api\";\r\nimport {useReducer} from \"react\";\r\n\r\n/**\r\n *on viens de crée un hook\r\n *\r\n * un reducer qui permet de definir les mutation\r\n * et on crée des action que l'on pouvoir passer a nos differents systeme\r\n */\r\n\r\nfunction reducer (state, action) {\r\n    console.log('INGREDIENTS REDUCE', action.type, action )\r\n    switch (action.type){\r\n        case 'SET_INGREDIENTS':\r\n            return {...state, ingredients: action.payload}\r\n    }\r\n}\r\n\r\nexport  function useIngredients () {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        ingredients: null\r\n    })\r\n\r\n    return {\r\n        ingredients: state.ingredients,\r\n        fetchIngredients: async function () {\r\n            const ingredients = await apiFetch('/ingredients')\r\n            dispatch({type: 'SET_INGREDIENTS', payload: ingredients})\r\n        }\r\n    }\r\n\r\n}\r\n","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\index.js",[],["43","44"],{"ruleId":"45","severity":1,"message":"46","line":11,"column":5,"nodeType":"47","endLine":11,"endColumn":14,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":18,"column":19,"nodeType":"47","messageId":"51","endLine":18,"endColumn":23},{"ruleId":"45","severity":1,"message":"52","line":26,"column":8,"nodeType":"53","endLine":26,"endColumn":14,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":48,"column":9,"nodeType":"57","endLine":48,"endColumn":45},{"ruleId":"58","severity":1,"message":"59","line":13,"column":5,"nodeType":"60","messageId":"61","endLine":16,"endColumn":6},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["66"],"no-unused-vars","'user' is assigned a value but never used.","unusedVar","React Hook useEffect has a missing dependency: 'fetchIngredients'. Either include it or remove the dependency array.","ArrayExpression",["67"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["68"],"no-negated-in-lhs",["69"],{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"no-global-assign","no-unsafe-negation","Add dependencies array: []",{"range":"74","text":"75"},"Update the dependencies array to be: [fetchIngredients, page]",{"range":"76","text":"77"},[368,368],", []",[727,733],"[fetchIngredients, page]"]