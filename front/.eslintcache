[{"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App.jsx":"1","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App\\LoginForm.jsx":"2","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\utils\\api.js":"3","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\reportWebVitals.js":"4"},{"size":480,"mtime":1609331767740,"results":"5","hashOfConfig":"6"},{"size":1643,"mtime":1609332157415,"results":"7","hashOfConfig":"6"},{"size":761,"mtime":1609331328797,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":1609277249474,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xva0oj",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App.jsx",["19"],"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\App\\LoginForm.jsx",["20"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {useState} from \"react\"\nimport {ApiErrors, apiFetch} from \"../utils/api\";\n\nexport function LoginForm ({onConnect}){\n\n    const [error, setError] = useState(null)\n    const [loading, setLoding] = useState(false)\n\n    const handleSubmit = async function (e){\n        setError(null)\n        setLoding(true)\n        e.preventDefault()\n\n        const data = new FormData(e.target)\n        try{\n            const user = await apiFetch('/login', {\n                method: 'POST',\n                body: data,\n            })\n        } catch (e){\n            if (e instanceof ApiErrors){\n                setError(e.errors[0].message)\n\n            }else{\n                console.log(e)\n            }\n            setLoding(false)\n        }\n    }\n\n    return <form className=\"container mt-4\" onSubmit={handleSubmit}>\n        <h2>Se connecter</h2>\n        {error && <Alert>{error}</Alert>}\n        <div className=\"form-group\">\n            <label htmlFor=\"email\">Nom d'utilisateur</label>\n            <input type=\"text\" name=\"email\" id=\"email\"  className=\"form-control\" required/>\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"\">Mot de passe</label>\n            <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" required/>\n        </div>\n        <button disabled={loading} type=\"submit\" className=\"btn btn-primary\">Se connecter</button>\n    </form>\n}\n\nLoginForm.propTypes = {\n    onConnect: PropTypes.func.isRequired\n}\n\nfunction Alert ({children}){\n    return <div className=\"alert alert-danger\">\n        {children}\n    </div>\n}","C:\\Users\\Theo\\formation\\React-tp\\front\\src\\utils\\api.js",[],"C:\\Users\\Theo\\formation\\React-tp\\front\\src\\reportWebVitals.js",[],{"ruleId":"21","severity":1,"message":"22","line":10,"column":5,"nodeType":"23","endLine":10,"endColumn":14,"suggestions":"24"},{"ruleId":"25","severity":1,"message":"26","line":18,"column":19,"nodeType":"23","messageId":"27","endLine":18,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["28"],"no-unused-vars","'user' is assigned a value but never used.","unusedVar",{"desc":"29","fix":"30"},"Add dependencies array: []",{"range":"31","text":"32"},[335,335],", []"]